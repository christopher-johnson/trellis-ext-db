apply plugin: 'java-library'
apply plugin: 'osgi'

description = 'Trellis JDBC extension'

ext {
    moduleName = 'org.trellisldp.ext.jdbc'
}

dependencies {
    api("org.apache.commons:commons-rdf-api:$commonsRdfVersion")
    api("org.apache.commons:commons-lang3:$commonsLangVersion")
    api("org.glassfish.hk2.external:javax.inject:$javaxInjectVersion")
    api("org.trellisldp:trellis-api:$trellisVersion")
    api("org.trellisldp:trellis-audit:$trellisVersion")

    implementation("org.trellisldp:trellis-vocabulary:$trellisVersion")
    implementation("org.jdbi:jdbi3-core:$jdbiVersion")
    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation("org.apache.tamaya:tamaya-api:$tamayaVersion")

    testImplementation("com.opentable.components:otj-pg-embedded:$otjPgVersion")
    testImplementation("org.apache.commons:commons-text:$commonsTextVersion")
    testImplementation("org.apache.commons:commons-rdf-jena:$commonsRdfVersion")
    testImplementation("org.apache.tamaya:tamaya-core:$tamayaVersion")
    testImplementation("org.mockito:mockito-core:$mockitoVersion")
    testImplementation("org.trellisldp:trellis-file:$trellisVersion")
    testImplementation("org.trellisldp:trellis-id:$trellisVersion")
    testImplementation("org.trellisldp:trellis-test:$trellisVersion")
    testImplementation("com.google.guava:guava:$guavaVersion")
}

jar {
    manifest {
        description project.description
        docURL project.docURL
        vendor project.vendor
        license project.license

        instruction 'Automatic-Module-Name', moduleName
        instruction 'Import-Package', '*'
        instruction 'Export-Package', "${moduleName};version=${projectOsgiVersion}"
        instruction 'Require-Capability', '''\
            osgi.extender; filter:="(osgi.extender=osgi.serviceloader.processor)",
            osgi.serviceloader;
                filter:="(osgi.serviceloader=org.apache.commons.rdf.api.RDF)";
                resolution:=mandatory; cardinality:=at_least_one
            '''
    }
}

